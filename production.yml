version: "3"

services:
  # NGINX
  nginx:
    image: graphmarket/nginx_pw
    restart: unless-stopped
    hostname: nginx
    build:
      context: .
      dockerfile: ./compose/nginx/Dockerfile
    env_file:
      - env/nginx
    ports:
      - "80:80"
      - "443:443"
      - "8282:8282"
    volumes:
      - /1TB/presidentwatches-original:/media
    links:
      - "web:web"
    depends_on:
      - web

  web:
    image: graphmarket/server_pw
    restart: unless-stopped
    hostname: web
    build:
      context: .
      dockerfile: ./compose/server/Dockerfile
    env_file:
      - env/web
    volumes:
      - /1TB/presidentwatches-original/:/var/president_media/presidentwatches-original/
    links:
      - postgres_web:postgres
      - geo:geo
      - redis_sessions:redis_sessions
    depends_on:
      - postgres_web
      - redis_sessions
      - geo
      - celery_pw

  # Celery для Django-приложения
  celery_pw:
    image: graphmarket/celery_pw
    restart: unless-stopped
    hostname: web
    build:
      context: .
      dockerfile: ./compose/celery_pw/Dockerfile
    env_file:
      - env/web
    volumes:
      - /var/president_media:/var/president_media
    links:
      - postgres_web:postgres
    depends_on:
      - postgres_web

  # Elasticsearch:
  elasticsearch:
    image: graphmarket/elasticsearch-pw
    restart: unless-stopped
    hostname: elasticsearch
    volumes:
      - ./storage/elasticsearch/:/var/graph_market:rw
    logging:
      driver: none

  # GEO Service
  geo:
    image: graphmarket/geo_pw:latest
    restart: unless-stopped
    hostname: geo
    build:
      context: .
      dockerfile: ./compose/geo/Dockerfile
    env_file:
      - env/geo
    links:
      - rabbit
      - redis
    depends_on:
      - rabbit
      - redis

  # RABBITMQ
  rabbit:
    image: rabbitmq:3.8-rc-management-alpine
    restart: unless-stopped
    hostname: rabbit
    volumes:
      - ./env/rabbitmq.config:/etc/rabbitmq/rabbitmq.config:rw
      - ./env/rabbitmq_definitions.json:/etc/rabbitmq/definitions.json:rw
    logging:
      driver: none

  # Redis for session caching
  redis_sessions:
    image: redis:latest
    sysctls:
      net.core.somaxconn: 4096
    command: redis-server /redis/redis.conf
    restart: unless-stopped
    hostname: redis_sessions
    volumes:
      - ./config/redis.conf:/redis/redis.conf
      - ./storage/redis/data:/data
    deploy:
      resources:
        limits:
          memory: 2gb
    logging:
      driver: none

  # Redis for other purposes (cache, celery integration etc.)
  redis:
    image: redis:latest
    sysctls:
      net.core.somaxconn: 1024
    command: redis-server /redis/redis.conf
    restart: unless-stopped
    hostname: redis
    volumes:
      - ./config/redis_cache.conf:/redis/redis.conf
      - ./storage/redis_cache/data:/data
    deploy:
      resources:
        limits:
          memory: 600mb
    logging:
      driver: none


  # Postgres для основного Django-приложения
  postgres_web:
    image: postgres:latest
    restart: unless-stopped
    shm_size: 3gb
    volumes:
      - ./storage/postgres_web/:/var/postgresql/data:rw
    env_file:
      - env/postgres_web

  # Postgres для геосервиса
  postgres_geo:
    image: postgres:latest
    restart: unless-stopped
    shm_size: 2gb
    volumes:
      - ./storage/postgres_geo:/var/postgresql/data:rw
    env_file:
      - env/postgres_geo