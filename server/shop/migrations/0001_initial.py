# Generated by Django 2.1.4 on 2019-07-18 12:21

import core.db.fields.description
import core.db.fields.name
from django.db import migrations, models
import django.db.models.deletion
import eav.fields
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='creation date')),
                ('modified_at', models.DateTimeField(blank=True, verbose_name='last modification date')),
                ('description', core.db.fields.description.DescriptionField(blank=True, verbose_name='описание')),
                ('order', models.IntegerField(default=0)),
                ('is_hidden', models.BooleanField(default=False)),
                ('datatype', eav.fields.EavDatatypeField(choices=[(1, 'Text'), (2, 'Integer'), (3, 'Float'), (4, 'Bool'), (5, 'Choice'), (6, 'MultiChoice')], db_index=True, default=1)),
                ('name', core.db.fields.name.NameField(blank=True, max_length=512, verbose_name='название')),
                ('key', eav.fields.EavSlugField(blank=True, max_length=255)),
                ('measure', models.CharField(blank=True, max_length=255, verbose_name='единица змерения')),
                ('is_filter', models.BooleanField(default=False)),
                ('strict_options', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AttributeGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='creation date')),
                ('modified_at', models.DateTimeField(blank=True, verbose_name='last modification date')),
                ('order', models.IntegerField(default=0)),
                ('is_hidden', models.BooleanField(default=False)),
                ('name', core.db.fields.name.NameField(blank=True, max_length=512, verbose_name='название')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AttributeValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='creation date')),
                ('modified_at', models.DateTimeField(blank=True, verbose_name='last modification date')),
                ('order', models.IntegerField(default=0)),
                ('is_hidden', models.BooleanField(default=False)),
                ('datatype', eav.fields.EavDatatypeField(choices=[(1, 'Text'), (2, 'Integer'), (3, 'Float'), (4, 'Bool'), (5, 'Choice'), (6, 'MultiChoice')], db_index=True, default=1)),
                ('key', eav.fields.EavSlugField(blank=True, max_length=255)),
                ('value_text', models.CharField(blank=True, max_length=2048, null=True)),
                ('value_int', models.IntegerField(blank=True, null=True)),
                ('value_float', models.FloatField(blank=True, null=True)),
                ('value_bool', models.BooleanField(blank=True, null=True)),
                ('value_enum', models.CharField(db_index=True, default=None, max_length=256, null=True)),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='value_set', to='shop.Attribute')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CategoryNodeInputRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='CategoryNodeOutdatedUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='creation date')),
                ('modified_at', models.DateTimeField(blank=True, verbose_name='last modification date')),
                ('slug', models.CharField(blank=True, db_index=True, max_length=2048, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CategoryNodeRetailRocketRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CategoryPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(blank=True, db_index=True, max_length=2048, unique=True)),
                ('scoring', models.IntegerField(default=0)),
                ('is_published', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='creation date')),
                ('modified_at', models.DateTimeField(blank=True, verbose_name='last modification date')),
                ('order', models.IntegerField(default=0)),
                ('search_scoring', models.PositiveIntegerField(default=10, verbose_name='поисковый скоринг')),
                ('_title', models.CharField(blank=True, max_length=512)),
                ('_meta_title', models.CharField(blank=True, max_length=256)),
                ('_meta_keywords', models.CharField(blank=True, max_length=256)),
                ('_meta_description', models.CharField(blank=True, max_length=512)),
                ('_depth', models.PositiveIntegerField(default=0)),
                ('name', core.db.fields.name.NameField(blank=True, max_length=512, verbose_name='название')),
                ('description', core.db.fields.description.DescriptionField(blank=True, verbose_name='описание')),
                ('rr_node', models.BooleanField(default=False)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CategoryValueRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.CategoryPage')),
                ('value', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.AttributeValue')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(default='images/no_photo.png', max_length=512, upload_to='images/')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(blank=True, db_index=True, max_length=2048, unique=True)),
                ('scoring', models.IntegerField(default=0)),
                ('is_published', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='creation date')),
                ('modified_at', models.DateTimeField(blank=True, verbose_name='last modification date')),
                ('height', models.FloatField(default=0)),
                ('width', models.FloatField(default=0)),
                ('thickness', models.FloatField(default=0)),
                ('_weight', models.FloatField(default=0)),
                ('order', models.IntegerField(default=0)),
                ('image', models.ImageField(default='images/no_photo.png', max_length=512, upload_to='images/')),
                ('search_scoring', models.PositiveIntegerField(default=10, verbose_name='поисковый скоринг')),
                ('_title', models.CharField(blank=True, max_length=512)),
                ('_meta_title', models.CharField(blank=True, max_length=256)),
                ('_meta_keywords', models.CharField(blank=True, max_length=256)),
                ('_meta_description', models.CharField(blank=True, max_length=512)),
                ('name', core.db.fields.name.NameField(blank=True, max_length=512, verbose_name='название')),
                ('description', core.db.fields.description.DescriptionField(blank=True, verbose_name='описание')),
                ('_price', models.PositiveIntegerField(default=0)),
                ('_purchase_price', models.PositiveIntegerField(default=0)),
                ('old_price', models.PositiveIntegerField(default=0)),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('sale_percentage', models.PositiveIntegerField(default=0)),
                ('is_in_stock', models.BooleanField(default=False)),
                ('is_in_store', models.BooleanField(default=False)),
                ('is_bestseller', models.BooleanField(default=False)),
                ('is_new', models.BooleanField(default=False)),
                ('is_in_showcase', models.BooleanField(default=False)),
                ('is_sale', models.BooleanField(default=False)),
                ('rating', models.FloatField(default=0)),
                ('model', models.CharField(db_index=True, max_length=128, unique=True)),
                ('brand', models.CharField(blank=True, db_index=True, max_length=512)),
                ('series', models.CharField(blank=True, max_length=512)),
                ('manual', models.FileField(blank=True, null=True, upload_to='manuals')),
                ('certificate', models.FileField(blank=True, null=True, upload_to='certificates')),
                ('guarantee', models.PositiveSmallIntegerField(default=0)),
                ('precision', models.CharField(blank=True, max_length=512)),
                ('extra_info', models.CharField(blank=True, max_length=512)),
                ('package', models.CharField(blank=True, max_length=512)),
                ('is_yml_offer', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductValueRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.ProductPage')),
                ('value', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.AttributeValue')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='productpage',
            name='attribute_values',
            field=models.ManyToManyField(blank=True, related_name='product_set', through='shop.ProductValueRelation', to='shop.AttributeValue'),
        ),
        migrations.AddField(
            model_name='productimage',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='shop.ProductPage'),
        ),
        migrations.AddField(
            model_name='categorypage',
            name='attribute_values',
            field=models.ManyToManyField(blank=True, related_name='categories', through='shop.CategoryValueRelation', to='shop.AttributeValue'),
        ),
        migrations.AddField(
            model_name='categorypage',
            name='inputs',
            field=models.ManyToManyField(blank=True, related_name='outputs', through='shop.CategoryNodeInputRelation', to='shop.CategoryPage'),
        ),
        migrations.AddField(
            model_name='categorypage',
            name='parent',
            field=mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='childs', to='shop.CategoryPage'),
        ),
        migrations.AddField(
            model_name='categorypage',
            name='rr_nodes',
            field=models.ManyToManyField(blank=True, related_name='rr_outputs', through='shop.CategoryNodeRetailRocketRelation', to='shop.CategoryPage'),
        ),
        migrations.AddField(
            model_name='categorynoderetailrocketrelation',
            name='input_node',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='rr_input_node_reverse', to='shop.CategoryPage'),
        ),
        migrations.AddField(
            model_name='categorynoderetailrocketrelation',
            name='output_node',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='rr_output_node_reverse', to='shop.CategoryPage'),
        ),
        migrations.AddField(
            model_name='categorynodeoutdatedurl',
            name='node',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.CategoryPage'),
        ),
        migrations.AddField(
            model_name='categorynodeinputrelation',
            name='input_node',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='input_node_reverse', to='shop.CategoryPage'),
        ),
        migrations.AddField(
            model_name='categorynodeinputrelation',
            name='output_node',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='output_node_reverse', to='shop.CategoryPage'),
        ),
        migrations.AddField(
            model_name='attribute',
            name='group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='attribute_set', to='shop.AttributeGroup'),
        ),
        migrations.AlterUniqueTogether(
            name='categorynodeinputrelation',
            unique_together={('input_node', 'output_node')},
        ),
    ]
