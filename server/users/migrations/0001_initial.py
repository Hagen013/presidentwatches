# Generated by Django 2.1.4 on 2019-07-18 12:28

import core.db.fields.phone
import django.core.validators
from django.db import migrations, models
import django.utils.timezone
import users.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('role', models.PositiveIntegerField(choices=[(1, 'Client'), (2, 'Observer'), (3, 'Packager'), (4, 'ArticleWriter'), (5, 'ContentManager'), (6, 'Operator'), (7, 'Superviser')], default=1)),
                ('username', models.CharField(error_messages={'unique': 'Пользователь с такими данными уже существует'}, max_length=256, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('first_name', models.CharField(blank=True, max_length=64)),
                ('last_name', models.CharField(blank=True, max_length=64)),
                ('patronymic', models.CharField(blank=True, max_length=64)),
                ('phone_number', core.db.fields.phone.PhoneNumberField(max_length=17, validators=[django.core.validators.RegexValidator(message='Invalid phone number', regex='^\\+?1?\\d{9,15}$')], verbose_name='phone number')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('birth_date', models.DateTimeField(blank=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('last_login', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', users.managers.UserManager()),
            ],
        ),
    ]
